// This config shows how you can override the default format that
// SimpleFuelSwitch uses when displaying information about resources
// in the info pane for a part in KSP's vehicle editor.
//
// There are two places you can customize the format, which are set
// up separately. One is the "primary info", which is a short one-line
// summary that appears on the main center pane of the info pop-up.
// The other is the "info", which is what shows up on the various panes
// arranged down the right side of the pop-up.
//
// Overriding can be done on a per-resourcesId basis, or you could
// override the default behavior that gets applied to *all* resourcesId
// values used with the mod.  (By "resourcesId" I mean the values that
// are set on ModuleSwitchableResources to identify a selectable resource
// option.)
//
// This example overrides the format of LFO resources but leaves others
// alone (i.e. doesn't alter the default).  For more details about the
// format specification language, see the comments in SimpleFuelSwitch.cfg.

@SimpleFuelSwitch:AFTER[SimpleFuelSwitch]
{
	// InfoFormat is where we put the settings for the right-hand pane
	// that lists the amount of every single resource.
	@InfoFormat
	{
		// Here's the config line that does the work. It's a "key = value",
		// where the key says which resourcesId it applies to, and the
		// value says how we want it to be formatted. (There can be as
		// many such lines as needed for various resourcesId values.)

		%liquid_fuel_only = %u (%m)
		%liquid_fuel_oxidizer = %u (%m)

		// Let's break down the above.
		//
		// First, the key.  Why "liquid_fuel_oxidizer"?  Simple answer is
		// that that happens to be the resourcesId value that the SimpleFuelSwitch
		// config sets up in the ModuleSwitchableResources that gets added to
		// the various fuel tanks. That's what we want to affect, so that's the
		// resourcesId value that we used. If we wanted to affect *all* resource
		// formatting and not just LFO, we could have said "default" instead of
		// "liquid_fuel_oxidizer".
		//
		// Next, the format. The default formatter for displaying the amount of each
		// resource is just "%q" (for "quantity"), meaning "show tons if it's
		// a resource that has mass, show units otherwise". For example, in the case
		// of LFO (which is a resource that has mass), by default it just shows
		// e.g. "0.45 t".  But suppose we want it to say the units *and* the mass,
		// i.e. something like "90 (0.45t)".  Well, in that case we set the formatter
		// to say "%u (%m)".  The %u gets substituted for the number of units, and
		// the %m gets substituted for the mass; everything else is interpreted as
		// a string literal.
		//
		// Note that the config above does *not* contain a specifier for each
		// individual *resource*, because such functionality is not supported.
		// For example, the liquid_fuel_oxidizer option has *two* resources in it
		// (liquid fuel and oxidizer), so the "%u (%m)" we specify in that line will
		// be individually applied to every resource within that option.
	}

	// PrimaryInfoFormat is where we put the settings for the center pane, which
	// shows summary information for all the resources for a given option.
	@PrimaryInfoFormat
	{
		// As with InfoFormat, each line is a "key = value" where the key is the
		// applicable resourcesId and the value is the format. However, the format
		// language is a bit different from that of InfoFormat.
		
		%liquid_fuel_only = %u (%m)
		%liquid_fuel_oxidizer = %u1/%u2 (%m)
		
		// Again, please see SimpleFuelSwitch.cfg for the full specification of the
		// format language, but here's how we use it here:  %u means "total units",
		// and "%m" means "total mass".  In the case of LFO, what we're doing here
		// is to show "units of LF, units of O, total mass", so we use %u1 (meaning
		// "units of resource #1") and %u2 (meaning "units of resource #2"). Note
		// that the liquid_fuel_only resourcesId is configured with only one resource
		// in the ModuleSwitchableResources on the fuel tanks, so it really doesn't
		// matter in this case whether we said %u or %u1 because the total of one thing
		// is that thing.  ;-)
	}
}
